1. Build 과정 (프로젝트 관리(blind 전과정) : 요구사항 식별 > 분석 > 설계) 
 : 명령어 > 컴파일 > 단위테스트 > 배치파일/API 문서 작성 > 서버에 배치
- build 도구 : ant(build.xml) > maven(+의존 라이브러리 관리, pom.xml ) > gradle
(+복잡한 제어 - xml 대신 Groovy 언어를 사용하여 설정 파일(스크립트) 작성, build.gradle)

2. groovy 그루비 (프로그래밍 언어)
- 그루비(Groovy)는 자바에 파이썬, 루비, 스몰토크등의 특징을 더한 동적 객체 지향 프로그래밍 언어
특징 
- 자바 가상 머신에서 작동하는 동적 타이핑 프로그래밍 언어이다. 
- 자바의 강점 위에 파이썬, 루비, 스몰토크등의 프로그래밍 언어에 영향을 받은 특장점을 더하였다.
- 자바 프로그래머들이 많은 학습을 하지 않고도 최신 프로그래밍 기법을 사용할 수 있다.
- 도메인 전문 언어와 단순화된 문법을 지원하여 코드가 읽고 유지 보수하기 편해진다.

3, VM 관리 기능도 포함한다 

4. c를 실행 $ ./hello.exe (기계어이기 때문에 바로 실행이 가능한다 )
자바는 (기계어가 아니기 때문에 VM으로 실행해야 한다 java

5. 인터프린터 방식(node) vs 컴파일러 방식(C) vs 인터프린터 + 컴파일러 방식(JAVA)
- A4로 문서 작성 참고(그림으로 참조) 

6. Gradle 실행 방법 (libs, distribution에서 실행 
$ java -cp ./test.jar com.ohoracs.ok.App 
- 현재 폴더 일때는 ./생략가능
- 압출이 안풀려도 VM이 실행한다
- libs, distributions에서 배포자료

7. Gradle의 역할
- (Build)된 (모든) 파일을 (컴파일) 후 (압축)까지 해서 (배포)

8. 자바스크립트, 자바의 구분은 자바스크립트의 경우 작은 프로그램을 사용하기 때문에 문장의 길이가 짧지만
자바는 무거운 프로그램을 사용하기 때문에 그에 따라 객체별로 구분을 한다 

9 class 앞에 붙을 수 있는 것은 public 뿐이다.
public O : 공개 , public x : 비공개 
- 파일안의 공개 클래스는 하나 뿐이여야 한다 (클래스 명과 파일명 일치)
 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Gradle 빌드 도구		
[ ]Gradle 빌드 도구를 이용하여 작업 폴더를 자바 프로젝트 폴더로 구성할 수 있다.	
- /프로젝트폴더 $ gradle init (소스, 설정파일, 셋팅값 등이 만들어진다)
[ ]Gradle로 생성된 src 디렉토리의 구조를 이해하고 설명할 수 있다.	/src	
[ ]src 디렉토리 외에 다른 디렉토리나 파일의 용도를 이해한다.	