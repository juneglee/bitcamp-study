리터럴
1. 정수 리터럴
- 10진수, 8진수, 16진수, 2진수
10의 진수
    System.out.println(78);
    System.out.println(+78);
    System.out.println(-78);

8의 진수 (0)
    System.out.println(0116);
    System.out.println(-0116);

16의 진수 (0x,대문자, 앞에 '0' 가능)
    System.out.println(0x4e);  
    System.out.println(-0x4e);

2의 진수 (0b,대문자(B), 앞에 '0' 가능)
    System.out.println(0b01001110); 
    System.out.println(-0b01001110);

    // 금액 표기를 위해 _ 사용 (한국 4자리, 미국 3자리 )
    // 맨앞,뒷자리는 안된다
    System.out.println(2_3500_0000); // 10진수
    System.out.println(2_3500_0000); // 10진수

    System.out.println(0144); // 8진수 (0)
    System.out.println(0_144); // 8진수만 중간에 가능

    System.out.println(0x64); // 16진수 (0x,대문자, 앞에 '0' 가능)
    // System.out.println(0x_64); // 중간 불가능

    System.out.println(0b1100100); // 2진수 (0b,대문자(B), 앞에 '0' 가능)
    // System.out.println(0b_1100100); // 중간 불가능
    
    // 실무에서는 소문자를 사용한다



- 메모리 저장 방식
- 메모리 크기와 유효 값의 범위
- 음수 표현 방식 (sign magnitude, 1의 보수, 2의 보수)




2. 소수 리터럴
- 고정소수점, 부동소수점
- 정규화
- 바이어스
- IEEE754

3. 문자 리터럴
- character set

4. 논리 리터럴
- and, or 연산 

5. 이스케이프 문자
//- 문자를 제어하는 기능을 가진 문자
    //- 문법
    // \[ n | r | f | t | b | ' | " | \ ]  
    // 대소문자를 구분


---------------------------------------------------------------------------------------------------------------------------------------------------
# 01 - 자바 애플리케이션 프로젝트 만들기

## 학습 목표

- `그레이들`을 이용하여 프로젝트 디렉토리를 구성할 수 있다.
- `그레이들`로 프로젝트를 빌드하고 실행할 수 있다.
- `아파치 메이븐` 프로젝트의 디렉토리 구조를 이해한다.

## 실습 소스 및 결과

자바 애플리케이션 프로젝트 폴더를 준비한다.

## 실습

### 작업1) 프로젝트 디렉토리를 준비하라.

로컬 Git 저장소에 자바 프로젝트 폴더를 생성한다. ($ mkdir java-project)
프로젝트 폴더를 자바 애플리케이션 프로젝트로 초기화시킨다. ($ gradle init)
자바 소스 파일 외의 기타 파일을 보관할 디렉토리 생성 

### 작업2) '그레이들'의 빌드 스크립트 파일을 편집하라.

build.gradle 파일에 다음 설정을 추가한다.

```
tasks.withType(JavaCompile) {
// 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
    options.encoding = 'UTF-8'
// 소스 파일을 작성할 때 사용할 자바 버전
    sourceCompatibility = '1.8'
// 자바 클래스를 실행시킬 JVM의 최소 버전
    targetCompatibility = '1.8'
}
```

### 작업3) 프로젝트를 빌드하라. $ gradle build

### 작업4) 프로젝트를 실행하라. $ gradle run

---------------------------------------------------------------------------------------------------------------------------------------------------
# 02 - `이클립스 IDE`로 프로젝트 다루기

## 학습 목표

- `그레이들`을 이용하여 `이클립스 IDE`용 프로젝트로 전환할 수 있다.
- `이클립스` 워크스페이스로 프로젝트를 가져올 수 있다.
- `이클립스`에서 빌드하고 실행할 수 있다.

## 실습 소스 및 결과

- ~/git/eomcs-study/eomcs-java-project/build.gradle (변경)

이클립스 IDE로 import 한 후 애플리케이션을 실행한다.

## 실습

### 작업1) 그레이들의 빌드 스크립트 파일에 이클립스 플러그인을 추가하라.

### 작업2) 이클립스 IDE에서 사용할 프로젝트 설정 파일을 생성하라. $ gradle eclipse

### 작업3) 이클립스 IDE의 워크스페이스로 프로젝트를 가져와라. - 이클립스 워크스페이스로 가져온다.

### 작업4) 이클립스 IDE에서 프로젝트를 실행하라. - 이클립스 메뉴를 통해 App 클래스를 실행한다.

1. eclipse 플러그인 > 실행
 2. gradle cleaneclipseclasspath(. 없이 실행)
